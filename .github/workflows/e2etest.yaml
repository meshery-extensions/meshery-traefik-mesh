name: Meshery Adapter for Traefik Mesh Tests

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  pull_request:
    branches:
      - "*"
jobs:
  SetPatterfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get latest release tag
        id: gettag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: traefik/mesh
          excludes: prerelease, draft
      - name: Change service mesh version in patternfile
        run: | 
           
           yq e -i '.services.traefik.settings.version="${{ steps.gettag.outputs.release }}"' ./.github/install/deploy.yaml 
           cat ./.github/install/deploy.yaml
      - name: Uploading file
        uses: actions/upload-artifact@v2
        with:
          name: patternfile
          path: ./.github/install/deploy.yaml 

  TestTraefik:
    needs: SetPatterfile
    uses: meshery/meshery/.github/workflows/testadapters.yaml@master
    with:
      expected_pods: grafana-core,jaeger,prometheus-core,traefik-mesh-controller,traefik-mesh-proxy
      expected_pods_namespaces: traefik,traefik,traefik,traefik,traefik
      deployment_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-traefik-mesh-deployment.yaml
      service_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-traefik-mesh-service.yaml
      adapter_name: traefik
      patternfile_name: deploy.yaml
      provider: Local
    secrets:
      token: ${{ secrets.PROVIDER_TOKEN }} 

UpdateDocs:
    needs: TestTraefik
    if:  "always() && github.event_name != 'pull_request' "
    runs-on: ubuntu-latest
    steps:
      - name: Skip if needed
        run: |
            echo "this is it ${{ needs.SkipIfNeeded.outputs.skipdocupdate }} "
            if [ "${{github.event_name }}" == "push" ];then
              echo "version=edge" >> $GITHUB_ENV
            fi
            if [ "${{github.event_name }}" == "release" ];then
              echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            fi
      - uses: actions/checkout@master
        with:
          repository: meshery/meshery 
          token: ${{ secrets.GH_ACCESS_TOKEN }}   
      - name: DownloadJSON
        uses: actions/download-artifact@v2
        with:
          name: data.json
      - name: echo results
        run: |
          pretty=$(jq . data.json)
          rm data.json
          mkdir -p ./docs/_compatibility/meshery-traefik-mesh
          cd ./docs/_compatibility/meshery-traefik-mesh
          touch data.json
          echo $pretty > data.json
          cat data.json
          touch test.md
          filename=(`date +%m-%d-%Y-%H-%M-%m_${SHORT_SHA}`)
          echo $filename
          echo "---
          timestamp: $(jq '.metadata.runon' data.json)
          meshery-component: meshery-traefik-mesh
          meshery-component-version: $version
          meshery-server-version: $(jq '.metadata."meshery-server-version"' data.json)
          k8s-distro: minikube
          k8s-version: $(jq '.metadata.k8s_version' data.json)
          service-mesh: traefik-mesh
          service-mesh-version: $(jq '.metadata.service_mesh_version' data.json)
          tests:
            osm-bootstrap: $(jq '.pods_status."osm-bootstrap"' data.json)
            osm-controller: $(jq '.pods_status."osm-controller"' data.json)
            osm-injector:  $(jq '.pods_status."osm-injector"' data.json)
          overall-status: $(jq '."overall-status"' data.json)
          ---" >  test.md
          mv test.md $filename.md
          rm data.json
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docs
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: '--signoff'
          commit_message: '[Docs] Test status of adapter'